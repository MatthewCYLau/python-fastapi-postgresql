name: Build and Push to Google Container Registry

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: open-source-apps-001
  IMAGE: python-fastapi-postgresql
  REGISTRY_HOSTNAME: gcr.io

jobs:
  test:
    strategy:
      matrix:
        python-version: [3.11]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Run unit tests
        run: |
          python -m pytest tests
          python -m pytest --cov=api
  setup-build-push:
    needs: test
    name: Setup, Build, and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"
      - name: Authenticate with Container Registry
        run: |
          gcloud --quiet auth configure-docker
      # Build the Docker image
      - name: Build
        run: |-
          docker build -t \
          "$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:$GITHUB_SHA" -t \
          "$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:latest" .
      # Push the Docker image to Google Container Registry
      - name: Push
        run: |
          docker push "$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:$GITHUB_SHA" 
          docker push "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":latest
