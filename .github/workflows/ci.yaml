name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: open-source-apps-001
  IMAGE: python-fastapi-postgresql
  REGISTRY_HOSTNAME: gcr.io
  CLOUD_RUN_SERVICE: python-fastapi-postgresql
  CLOUD_RUN_SERVICE_ACCOUNT_EMAIL: fastapi-db-iam-user@open-source-apps-001.iam.gserviceaccount.com
  INSTANCE_CONNECTION_NAME: open-source-apps-001:europe-west1:python-fastapi-eeb5f863
  DB_IAM_USER: fastapi-db-iam-user@open-source-apps-001.iam

jobs:
  test:
    strategy:
      matrix:
        python-version: [3.11]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Run unit tests
        run: |
          python -m pytest tests
          python -m pytest --cov=api
  setup-build-publish-deploy:
    needs: test
    name: Setup, Build, and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"
      - name: Authenticate with Container Registry
        run: |
          gcloud --quiet auth configure-docker
      # Build the Docker image
      - name: Build
        run: |-
          docker build -t \
          "$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:$GITHUB_SHA" -t \
          "$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:latest" .
      # Push the Docker image to Google Container Registry
      - name: Push
        run: |
          docker push "$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:$GITHUB_SHA" 
          docker push "$REGISTRY_HOSTNAME"/$PROJECT_ID/"$IMAGE":latest
      - name: Deploy
        run: |
          gcloud run deploy ${CLOUD_RUN_SERVICE} --image "$REGISTRY_HOSTNAME/$PROJECT_ID/$IMAGE:$GITHUB_SHA" --region europe-west1 \
          --service-account=${CLOUD_RUN_SERVICE_ACCOUNT_EMAIL} \
          --update-secrets=JWT_SECRET=jwt-secret:latest \
          --set-env-vars=INSTANCE_CONNECTION_NAME=${INSTANCE_CONNECTION_NAME}\
          ,DB_IAM_USER=${DB_IAM_USER}
